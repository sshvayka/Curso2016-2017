Qiting Li Hu, u120064


1. Get all the classes
select distinct ?class
where {
?x a ?class
}
------------------------------------
class
http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
http://www.w3.org/2000/01/rdf-schema#Class
http://GP-onto.fi.upm.es/exercise2#PhysicalPoint
http://GP-onto.fi.upm.es/exercise2#Stage
http://GP-onto.fi.upm.es/exercise2#Bicycle
http://GP-onto.fi.upm.es/exercise2#PostalAddress
http://GP-onto.fi.upm.es/exercise2#Road
http://GP-onto.fi.upm.es/exercise2#Cathedral
http://GP-onto.fi.upm.es/exercise2#City
http://GP-onto.fi.upm.es/exercise2#Route
http://GP-onto.fi.upm.es/exercise2#Stretch
http://GP-onto.fi.upm.es/exercise2#Location
http://GP-onto.fi.upm.es/exercise2#Palace
http://GP-onto.fi.upm.es/exercise2#Town
http://GP-onto.fi.upm.es/exercise2#RestaurationService

2. Get all the subclasses of the class Establishment
select distinct ?subclase
where {
?subclase rdfs:subClassOf <http://GP-onto.fi.upm.es/exercise2#Establishment>
} 
------------------------------------------------
subclase
http://GP-onto.fi.upm.es/exercise2#Hostel
http://GP-onto.fi.upm.es/exercise2#GuestHouse
http://GP-onto.fi.upm.es/exercise2#Hotel

3. Get all instances of the class City
select distinct ?city
where {
?city a <http://GP-onto.fi.upm.es/exercise2#City>
}
-----------------------------------------------
city
http://GP-onto.fi.upm.es/exercise2#ACoruC1a
http://GP-onto.fi.upm.es/exercise2#Santiago_de_Compostela
http://GP-onto.fi.upm.es/exercise2#Madrid

4. Get the number of inhabitants of Santiago de Compostela

prefix pre:<http://GP-onto.fi.upm.es/exercise2#>
select ?x
where {
pre:Santiago_de_Compostela pre:hasInhabitantNumber ?x
} 
--------------------------------------------
x
" 300000 "^^<http://www.w3.org/2001/XMLSchema#integer>


5. Get the number of inhabitants of Santiago de Compostela and Arzua

prefix pre:<http://GP-onto.fi.upm.es/exercise2#>
select ?x
where {
{pre:Santiago_de_Compostela pre:hasInhabitantNumber ?x}
UNION
{pre:Arzua pre:hasInhabitantNumber ?x}
} 
----------------------------------------------
x
" 300000 "^^<http://www.w3.org/2001/XMLSchema#integer>
" 38900 "^^<http://www.w3.org/2001/XMLSchema#integer>

6. Get all places, together with the number of inhabitants, ordered by the place name (ascending)

prefix pre:<http://GP-onto.fi.upm.es/exercise2#>
select ?places ?number
where {
?places pre:hasInhabitantNumber ?number .
?places rdfs:label ?name
} ORDER BY ?name ASC(?places)
---------------------------------------------------
places															number
http://GP-onto.fi.upm.es/exercise2#Arzua	" 					38900 "^^<http://www.w3.org/2001/XMLSchema#integer>
http://GP-onto.fi.upm.es/exercise2#Santiago_de_Compostela	"	 300000 "^^<http://www.w3.org/2001/XMLSchema#integer>

7. Get all instances of Locality together with their number of inhabitants (if this information exists)

prefix pre:<http://GP-onto.fi.upm.es/exercise2#>
select ?locality ?number
where {
{?locality a pre:Locality} UNION
{?locality a ?subclass .
?subclass rdfs:subClassOf pre:Locality} .
OPTIONAL {?locality pre:hasInhabitantNumber ?number}
}
---------------------------------------------
locality	number
http://GP-onto.fi.upm.es/exercise2#ACoruC1a	
http://GP-onto.fi.upm.es/exercise2#Santiago_de_Compostela	" 300000 "^^<http://www.w3.org/2001/XMLSchema#integer>
http://GP-onto.fi.upm.es/exercise2#Madrid	
http://GP-onto.fi.upm.es/exercise2#Arzua	" 38900 "^^<http://www.w3.org/2001/XMLSchema#integer>

8. Get all places with more than 200.000 inhabitants
prefix pre:<http://GP-onto.fi.upm.es/exercise2#>
SELECT ?places 
WHERE {
?places pre:hasInhabitantNumber ?number .
FILTER (xsd:integer(?number) > 200000)
}
-----------------------------------------------
places
http://GP-onto.fi.upm.es/exercise2#Santiago_de_Compostela

9. Get postal address data for Pazo_Breogan (street, number, locality, province)

prefix pre:<http://GP-onto.fi.upm.es/exercise2#>
select ?street ?number ?locality ?province
where {
pre:Pazo_Breogan pre:hasAddress ?address .
?address pre:hasStreet ?street .
?address pre:hasNumber ?number .
pre:Pazo_Breogan pre:isPlacedIn ?locality .
?locality pre:inProvince ?province
}
---------------------------------------------
street	number	locality	province
C/Mayor	5	http://GP-onto.fi.upm.es/exercise2#Arzua	Pontevedra

10. Get all subclasses of class Location
prefix pre:<http://GP-onto.fi.upm.es/exercise2#>
select distinct ?subclass
where {
?subclass rdfs:subClassOf pre:Location
} 
----------------------------------------------
subclass
http://GP-onto.fi.upm.es/exercise2#LocationOfInterest
street	number	locality	province
C/Mayor	5	http://GP-onto.fi.upm.es/exercise2#Arzua	Pontevedra

11. Get all instances of class Locality

prefix pre:<http://GP-onto.fi.upm.es/exercise2#>
select distinct ?instance
where {
?instance a pre:Locality
}
---------------------------------
instance

12. Describe the resource with rdfs:label "Madrid”

prefix pre:<http://GP-onto.fi.upm.es/exercise2#>
construct {?touristicPlace pre:isIn ?province}
where {
{?touristicPlace a pre:TouristicLocation}
UNION
{?touristicPlace a ?subclass .
 ?subclass rdfs:subClassOf pre:TouristicLocation} .
?touristicPlace pre:isPlacedIn ?locality .
?locality pre:inProvince ?province
}
------------------------------------------------
@prefix ns0:	<http://GP-onto.fi.upm.es/exercise2#> .
ns0:Cathedral_Santiago_Compostela	ns0:isIn	"Pontevedra" .
ns0:Pazo_Breogan	ns0:isIn	"Pontevedra" .

13. Construct a graph that relates directly all touristic places with their provinces, using a new property called ”isIn”

prefix pre:<http://GP-onto.fi.upm.es/exercise2#>
construct {?touristicPlace pre:isIn ?province}
where {
{?touristicPlace a pre:TouristicLocation}
UNION
{?touristicPlace a ?subclass .
 ?subclass rdfs:subClassOf pre:TouristicLocation} .
?touristicPlace pre:isPlacedIn ?locality .
?locality pre:inProvince ?province
}
--------------------------------------------
@prefix ns0:	<http://GP-onto.fi.upm.es/exercise2#> .
ns0:Cathedral_Santiago_Compostela	ns0:isIn	"Pontevedra" .
ns0:Pazo_Breogan	ns0:isIn	"Pontevedra" .

14. Check whether there is any instance of Town

prefix pre:<http://GP-onto.fi.upm.es/exercise2#>
ask
where { ?instance a pre:Town }
--------------------------------
true
