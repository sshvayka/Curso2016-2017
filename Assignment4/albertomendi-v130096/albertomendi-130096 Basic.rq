Alberto Mendiolagoitia Sánchez - V130096

   1. Get all the classes
SELECT ?cl WHERE{ 
					?cl a rdfs:Class. 
				}

   2. Get all the subclasses of the class Establishment
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
PREFIX pr: <http://GP-onto.fi.upm.es/exercise2#> 
SELECT ?sub WHERE   { 
						?sub 
						rdfs:subClassOf
						pr:Establishment. 
					}

   3. Get all instances of the class City
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
PREFIX pr: <http://GP-onto.fi.upm.es/exercise2#> 
SELECT ?ins WHERE 	{ 
						?ins 
						rdfs:type 
						pr:City. 
					} 

   4. Get the number of inhabitants of Santiago de Compostela
PREFIX pr: <http://GP-onto.fi.upm.es/exercise2#> 
SELECT ?num WHERE 	{ 
						pr:Santiago_de_Compostela 
						pr:hasInhabitantNumber 
						?num. 
					}

   5. Get the number of inhabitants of Santiago de Compostela and Arzua
PREFIX pr: <http://GP-onto.fi.upm.es/exercise2#> 
SELECT ?num ?num2 WHERE 	{ 
							pr:Santiago_de_Compostela
							pr:hasInhabitantNumber
							?num. 
							pr:Arzua
							pr:hasInhabitantNumber
							?num2. 
						}

   6. Get all places, together with the number of inhabitants, ordered by the place name (ascending)
PREFIX pr: <http://GP-onto.fi.upm.es/exercise2#> 
SELECT ?place ?num WHERE{ 
							?place
							pr:hasInhabitantNumber
							?num. 
						} ORDER BY ASC(?place)

   7. Get all instances of Locality together with their number of inhabitants (if this information exists)
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
PREFIX pr: <http://GP-onto.fi.upm.es/exercise2#> 
SELECT ?local ?num WHERE 	{
							?l 
							rdfs:subClassOf
							pr:Locality.
							?local a ?l.
							OPTIONAL {?local pr:hasInhabitantNumber ?num. } 
						}

   8. Get all places with more than 200.000 inhabitants
PREFIX pr: <http://GP-onto.fi.upm.es/exercise2#> 
SELECT ?place ?num WHERE{ 
							?place
							pr:hasInhabitantNumber
							?num.
							FILTER (xsd:integer(?num) > xsd:integer("200000")) 
						}

   9. Get postal address data for Pazo_Breogan (street, number, locality, province)
PREFIX pr: <http://GP-onto.fi.upm.es/exercise2#> 
SELECT ?str ?num ?local ?prov WHERE	{
														pr:Pazo_Breogan
														pr:hasAddress
														?address.
														?address
														pr:hasStreet
														?str.
														?address
														pr:hasNumber
														?num.
														pr:Pazo_Breogan
														pr:isPlacedIn 
														?local.
														?local 
														pr:inProvince
														?prov. 
													}

   10. Get all subclasses of class location
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
PREFIX pr: <http://GP-onto.fi.upm.es/exercise2#> 
SELECT ?sub WHERE 	{
						?sub
						rdfs:subClassOf 
						pr:Location. 
					}

   11. Get all instances of class Locality
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
PREFIX pr: <http://GP-onto.fi.upm.es/exercise2#> 
SELECT ?local WHERE {
						?sub
						rdfs:subClassOf 
						pr:Locality. 
						?local a ?sub.
					}

   12. Describe the resource with rdfs:label "Madrid”
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
DESCRIBE ?res WHERE {
						?res
						rdfs:label "Madrid".
					}

   13. Construct a pr that relates directly all touristic places with their provinces, using a new property called ”isIn”
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
PREFIX pr: <http://GP-onto.fi.upm.es/exercise2#> 
CONSTRUCT 	{ 
				?x pr:isIn ?y 
			} WHERE { 
						?tou 
						rdfs:subClassOf 
						pr:TouristicLocation.
						?x a ?tou. 
						?x pr:isPlacedIn ?i.
						?i pr:inProvince ?y. 
					}

   14. Check whether there is any instance of Town
PREFIX pr: <http://GP-onto.fi.upm.es/exercise2#> 
ASK  {
		?x a pr:Town. 
	 }