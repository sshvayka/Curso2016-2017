**SPARQL Questionnaire (Basic)**
Provide the SPARQL query and the result for the following queries expressed in natural language.
* 1. Get all the classes
select distinct ?dato
where
{
	?instancia ?relacion ?dato
}
* 2. Get all the subclasses of the class Establishment
prefix org: <http://GP-onto.fi.upm.es/exercise2#>
select distinct ?subclass
where
{
	?subclass rdfs:subClassOf org:Establishment
}
* 3. Get all instances of the class City
SELECT ?instancias
where
{
	?instancias  a <http://GP-onto.fi.upm.es/exercise2#City>
}
* 4. Get the number of inhabitants of Santiago de Compostela
select ?habitantes
where
{
	<http://GP-onto.fi.upm.es/exercise2#Santiago_de_Compostela> <http://GP-onto.fi.upm.es/exercise2#hasInhabitantNumber> ?habitantes
}
* 5. Get the number of inhabitants of Santiago de Compostela and Arzua
select ?arzua ?santiago
where
{
	<http://GP-onto.fi.upm.es/exercise2#Arzua> <http://GP-onto.fi.upm.es/exercise2#hasInhabitantNumber> ?arzua.
	<http://GP-onto.fi.upm.es/exercise2#Santiago_de_Compostela> <http://GP-onto.fi.upm.es/exercise2#hasInhabitantNumber> ?santiago
}
* 6. Get all places, together with the number of inhabitants, ordered by the place name (ascending)
select ?lugar ?habitantes where
{
	?lugar <http://GP-onto.fi.upm.es/exercise2#hasInhabitantNumber> ?habitantes
} ORDER BY ASC(?lugar)
* 7. Get all instances of  Locality together with their number of inhabitants (if this information exists)
select ?instancias ?habitantes
where
{
	?instancias a ?x .
	?x rdfs:subClassOf <http://GP-onto.fi.upm.es/exercise2#Locality> .
	OPTIONAL {?instancias <http://GP-onto.fi.upm.es/exercise2#hasInhabitantNumber> ?habitantes }
}
* 8. Get all places with more than 200.000 inhabitants
select ?lugares where
{
	?lugares <http://GP-onto.fi.upm.es/exercise2#hasInhabitantNumber> ?x.
	FILTER (xsd:integer(?x) > 200000)
}
* 9. Get postal address data for Pazo_Breogan (street, number, locality, province)
select ?calle ?numero ?localidad ?provincia
where
{
	<http://GP-onto.fi.upm.es/exercise2#Pazo_Breogan> <http://GP-onto.fi.upm.es/exercise2#hasAddress> ?dir .
	<http://GP-onto.fi.upm.es/exercise2#Pazo_Breogan> <http://GP-onto.fi.upm.es/exercise2#isPlacedIn> ?localidad .
	?dir <http://GP-onto.fi.upm.es/exercise2#hasStreet> ?calle .
	?dir <http://GP-onto.fi.upm.es/exercise2#hasNumber> ?numero .
	?localidad <http://GP-onto.fi.upm.es/exercise2#inProvince> ?provincia
}
* 10. Get all subclasses of class Location
select ?subclass where
{
	?subclass rdfs:subClassOf <http://GP-onto.fi.upm.es/exercise2#Location>
}
* 11. Get all instances of class Locality
select ?instancias
where
{
	?instancias a <http://GP-onto.fi.upm.es/exercise2#Locality>
}
* 12. Describe the resource with rdfs:label "Madrid”
describe ?recurso
where
{
	?recurso rdfs:label "Madrid"
}
* 13. Construct a graph that relates directly all touristic places with their provinces, using a new property called ”isIn”
construct {?lugar <http://GP-onto.fi.upm.es/exercise2#isIn> ?province}
where
{
	?lugar <http://GP-onto.fi.upm.es/exercise2#isPlacedIn> ?data .
	?data <http://GP-onto.fi.upm.es/exercise2#inProvince> ?province
}
* 14. Check whether there is any instance of Town
ask
where
{
	?x a <http://GP-onto.fi.upm.es/exercise2#Town>
}

**SPARQL Questionnaire (Advanced)**
 Provide the SPARQL query and the result for the following queries expressed in natural language. The endpoint that you can use for this exercise is: http://es.dbpedia.org/sparql
* A1. Dame todas las propiedades aplicables a las instancias de la clase Politician (<http://dbpedia.org/ontology/Politician>)
* A2. Dame todas las propiedades, exceptuando rdf:type, aplicables a las instancias de la clase Politician (<http://dbpedia.org/ontology/Politician>)
* A3. ¿Cuántos valores distintos se pueden encontrar para las propiedades, exceptuando rdf:type, de las instancias de la clase Politician (<http://dbpedia.org/ontology/Politician>)?
* A4. Para cada una de las propiedades, exceptuando rdf:type, aplicables a las instancias de la clase Politician (<http://dbpedia.org/ontology/Politician>), dime cuántos valores distintos toman en dichas instancias
* A5. Para cada una de las propiedades, exceptuando rdf:type, aplicables a las instancias de la clase Politician (<http://dbpedia.org/ontology/Politician>), dime la media de valores distintos que toman en dichas instancias.
* A6. Para cada una de las propiedades, exceptuando rdf:type, aplicables a las instancias de la clase Politician (<http://dbpedia.org/ontology/Politician>), dime el máximo número de valores distintos que toman entre todas sus instancias, ordenado de mayor a menor