-Antonio Fernández Pita t110097-
SPARQL Questionnaire (Basic) 

******* 1. Get all the classes *******

select ?clase 
where {
	?clase a <http://www.w3.org/2000/01/rdf-schema#Class>
      } 
	
http://GP-onto.fi.upm.es/exercise2#OnFoot
http://GP-onto.fi.upm.es/exercise2#TransportMedium
http://GP-onto.fi.upm.es/exercise2#Hostel
http://GP-onto.fi.upm.es/exercise2#Establishment
http://GP-onto.fi.upm.es/exercise2#PhysicalPoint
http://GP-onto.fi.upm.es/exercise2#Stage
http://GP-onto.fi.upm.es/exercise2#TransportInfrastructure
http://GP-onto.fi.upm.es/exercise2#Bus
http://GP-onto.fi.upm.es/exercise2#Car
http://GP-onto.fi.upm.es/exercise2#BankService
http://GP-onto.fi.upm.es/exercise2#Service
http://GP-onto.fi.upm.es/exercise2#Bicycle
http://GP-onto.fi.upm.es/exercise2#PostalAddress
http://GP-onto.fi.upm.es/exercise2#Path
http://GP-onto.fi.upm.es/exercise2#Road
http://GP-onto.fi.upm.es/exercise2#Cathedral
http://GP-onto.fi.upm.es/exercise2#TouristicLocation
http://GP-onto.fi.upm.es/exercise2#City
http://GP-onto.fi.upm.es/exercise2#Locality
http://GP-onto.fi.upm.es/exercise2#Route
http://GP-onto.fi.upm.es/exercise2#SpacialThing
http://GP-onto.fi.upm.es/exercise2#LocationOfInterest
http://GP-onto.fi.upm.es/exercise2#Stretch
http://GP-onto.fi.upm.es/exercise2#Chapel
http://GP-onto.fi.upm.es/exercise2#GuestHouse
http://GP-onto.fi.upm.es/exercise2#Hotel
http://GP-onto.fi.upm.es/exercise2#Church
http://GP-onto.fi.upm.es/exercise2#Location
http://GP-onto.fi.upm.es/exercise2#Palace
http://GP-onto.fi.upm.es/exercise2#PostalService
http://GP-onto.fi.upm.es/exercise2#Town
http://GP-onto.fi.upm.es/exercise2#RestaurationService
http://GP-onto.fi.upm.es/exercise2#HealthService
http://GP-onto.fi.upm.es/exercise2#SecurityService
http://GP-onto.fi.upm.es/exercise2#Track
http://GP-onto.fi.upm.es/exercise2#Train
http://GP-onto.fi.upm.es/exercise2#Railway
http://GP-onto.fi.upm.es/exercise2#Village

******* 2. Get all the subclasses of the class Establishment *******

select distinct ?subclase
where {
	?subclase 
	<http://www.w3.org/2000/01/rdf-schema#subClassOf> 
	<http://GP-onto.fi.upm.es/exercise2#Establishment>
       }

http://GP-onto.fi.upm.es/exercise2#Hostel
http://GP-onto.fi.upm.es/exercise2#GuestHouse
http://GP-onto.fi.upm.es/exercise2#Hotel


******* 3. Get all instances of the class City *******

select distinct ?ciudad
where{
	?ciudad 
	<http://www.w3.org/1999/02/22-rdf-syntax-ns#type> 
	<http://GP-onto.fi.upm.es/exercise2#City>
}

http://GP-onto.fi.upm.es/exercise2#ACoruC1a
http://GP-onto.fi.upm.es/exercise2#Santiago_de_Compostela
http://GP-onto.fi.upm.es/exercise2#Madrid

******* 4. Get the number of inhabitants of Santiago de Compostela *******

select distinct ?numeroHabitantesSantiagodeCompostela
where {
	<http://GP-onto.fi.upm.es/exercise2#Santiago_de_Compostela> 
	<http://GP-onto.fi.upm.es/exercise2#hasInhabitantNumber> 
        ?numeroHabitantesSantiagodeCompostela
      }

" 300000 "^^<http://www.w3.org/2001/XMLSchema#integer>	

******* 5. Get the number of inhabitants of Santiago de Compostela and Arzua *******

select ?inhabitants 
where{
	?place
	<http://GP-onto.fi.upm.es/exercise2#hasInhabitantNumber>
	?inhabitants .
	FILTER(?place= <http://GP-onto.fi.upm.es/exercise2#Arzua> || 
	?place= <http://GP-onto.fi.upm.es/exercise2#Santiago_de_Compostela> )
}


" 38900 "^^<http://www.w3.org/2001/XMLSchema#integer>					
" 300000 "^^<http://www.w3.org/2001/XMLSchema#integer>	


******* 6. Get all places, together with the number of inhabitants, ordered by the place name (ascending) *******


prefix exercise2:<http://GP-onto.fi.upm.es/exercise2#>
select distinct ?Place ?Inhabitants
where {
	?place 
	<http://GP-onto.fi.upm.es/exercise2#hasInhabitantNumber> 
	?inhabitants
       }
order by asc(?place)

place									
http://GP-onto.fi.upm.es/exercise2#Arzua			 	
http://GP-onto.fi.upm.es/exercise2#Santiago_de_Compostela
		
inhabitants
" 38900 "^^<http://www.w3.org/2001/XMLSchema#integer>
" 300000 "^^<http://www.w3.org/2001/XMLSchema#integer>

******* 7. Get all instances of  Locality together with their number of inhabitants (if this information exists) *******

select ?locality ?inhabitants
where{
	?kindLocality
	<http://www.w3.org/2000/01/rdf-schema#subClassOf> 
	<http://GP-onto.fi.upm.es/exercise2#Locality> .
	?locality a ?kindLocality
	OPTIONAL {
		?locality 
		<http://GP-onto.fi.upm.es/exercise2#hasInhabitantNumber>
		?inhabitants
	}
}

locality							 inhabitants
http://GP-onto.fi.upm.es/exercise2#ACoruC1a	
http://GP-onto.fi.upm.es/exercise2#Santiago_de_Compostela	" 300000 "^^<http://www.w3.org/2001/XMLSchema#integer>
http://GP-onto.fi.upm.es/exercise2#Madrid			
http://GP-onto.fi.upm.es/exercise2#Arzua			" 38900 "^^<http://www.w3.org/2001/XMLSchema#integer>


******* 8. Get all places with more than 200.000 inhabitants *******

select ?place ?inhabitants
where{
	?place 
	<http://GP-onto.fi.upm.es/exercise2#hasInhabitantNumber>
	?inhabitants.
	FILTER (xsd:integer(?habitantes) > 200000)
}

place inhabitants
http://GP-onto.fi.upm.es/exercise2#Santiago_de_Compostela	" 300000 "^^<http://www.w3.org/2001/XMLSchema#integer>

******* 9. Get postal address data for Pazo_Breogan (street, number, locality, province) *******

select distinct ?street ?number ?locality ?province
where {
	<http://GP-onto.fi.upm.es/exercise2#Pazo_Breogan>
	<http://GP-onto.fi.upm.es/exercise2#hasAddress> 
	?address.
	?address 
	<http://GP-onto.fi.upm.es/exercise2#hasStreet>
	?Street.
	?address 
	<http://GP-onto.fi.upm.es/exercise2#hasNumber> 
	?number.
	<http://GP-onto.fi.upm.es/exercise2#Pazo_Breogan>
	<http://GP-onto.fi.upm.es/exercise2#isPlacedIn>n 
	?locality.
	?locality 
	<http://GP-onto.fi.upm.es/exercise2#inProvince>
	?province
       }

street	  number	       locality					province
C/Mayor	  5		       http://GP-onto.fi.upm.es/exercise2#Arzua	Pontevedra


******* 10. Get all subclasses of class Location *******


******* 11. Get all instances of class Locality *******

select ?instances 
where{
	?subclases <http://www.w3.org/2000/01/rdf-schema#subClassOf>  
	<http://GP-onto.fi.upm.es/exercise2#Locality> .
	?instances a 	?subclases
}

http://GP-onto.fi.upm.es/exercise2#ACoruC1a
http://GP-onto.fi.upm.es/exercise2#Santiago_de_Compostela
http://GP-onto.fi.upm.es/exercise2#Madrid
http://GP-onto.fi.upm.es/exercise2#Arzua

******* 12. Describe the resource with rdfs:label "Madrid” *******



******* 13. Construct a graph that relates directly all touristic places with their provinces, using a new property called ”isIn” *******



******* 14. Check whether there is any instance of Town *******

ASK {
	?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://GP-onto.fi.upm.es/exercise2#Town>
	}
	
true